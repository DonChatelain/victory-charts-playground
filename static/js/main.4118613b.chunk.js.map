{"version":3,"sources":["components/CustomBarGraph.tsx","components/FullPageContainer.tsx","components/Home.tsx","components/TopNavbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomBarGraph","data","domain","className","width","height","theme","VictoryTheme","material","containerComponent","style","fill","events","target","eventHandlers","onClick","mutation","props","alert","JSON","stringify","undefined","labels","datum","label","size","labelComponent","dy","constrainToVisibleArea","animate","duration","onLoad","FullPageContainer","children","dataPoints","x","y","Home","id","TopNavbar","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAQaA,EAAgD,SAAC,GAGvD,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,OAGA,OACE,qBAAKC,UAAU,iBAAf,SACE,cAAC,IAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,MAAOC,IAAaC,SACpBN,OAAQA,EACRO,mBACE,cAAC,IAAD,IANJ,SASE,cAAC,IAAD,CACEC,MAAO,CACLT,KAAM,CAAEU,KAAM,WAEhBC,OAAQ,CACN,CACEC,OAAQ,OACRC,cAAe,CACbC,QAAS,iBAAM,CAAC,CACdF,OAAQ,OACRG,SAAU,SAACC,GAET,OADAC,MAAMC,KAAKC,UAAUH,OAAOI,EAAW,MAChC,YAMjBC,OAAQ,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,gBAAyBA,EAAzB,aAAmCD,EAAME,OACjDC,eACE,cAAC,IAAD,CACEC,GAAI,mBAA2B,IAA3B,EAAEJ,MAAiBE,MACvBG,wBAAsB,IAI1B3B,KAAMA,EACN4B,QAAS,CACPC,SAAU,IACVC,OAAQ,CAAED,SAAU,aCnDnBE,G,OAA8B,SAACf,GAC1C,OACE,qBAAKd,UAAU,oBAAf,SACGc,EAAMgB,aCAPC,G,OAAgC,CACpC,CAAEC,EAAG,GAAIC,EAAG,GAAIX,KAAM,GAAID,MAAO,SACjC,CAAEW,EAAG,GAAIC,EAAG,GAAIX,KAAM,GAAID,MAAO,QACjC,CAAEW,EAAG,GAAIC,EAAG,GAAIX,KAAM,GAAID,MAAO,SACjC,CAAEW,EAAG,GAAIC,EAAG,GAAIX,KAAM,GAAID,MAAO,WACjC,CAAEW,EAAG,GAAIC,EAAG,EAAGX,KAAM,GAAID,MAAO,SAChC,CAAEW,EAAG,GAAIC,EAAG,GAAIX,KAAM,GAAID,MAAO,QACjC,CAAEW,EAAG,GAAIC,EAAG,GAAIX,KAAM,GAAID,MAAO,OACjC,CAAEW,EAAG,GAAIC,EAAG,GAAIX,KAAM,EAAGD,MAAO,SAChC,CAAEW,EAAG,GAAIC,EAAG,GAAIX,KAAM,GAAID,MAAO,QACjC,CAAEW,EAAG,IAAKC,EAAG,EAAGX,KAAM,GAAID,MAAO,WAG7BtB,EAAyB,CAC7BiC,EAAG,CAAC,EAAG,KACPC,EAAG,CAAC,EAAG,MAGIC,EAAO,WAClB,OACE,cAAC,EAAD,UACE,uBAAMC,GAAG,OAAT,UACE,sCACA,cAAC,EAAD,CAAgBrC,KAAMiC,EAAYhC,OAAQA,UCzBrCqC,G,OAAY,WACvB,OACE,sBAAKD,GAAG,YAAR,UACE,6BACE,cAAC,IAAD,CAAME,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,4BCCOC,MAbf,WACI,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,YCIGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4118613b.chunk.js","sourcesContent":["import { DomainPropType, VictoryChart, VictoryScatter, VictoryTheme, VictoryTooltip, VictoryZoomContainer } from \"victory\";\nimport './CustomBarGraph.scss';\n\ninterface CustomBarGraphProps {\n  data: CustomDataPoint[];\n  domain: DomainPropType;\n}\n\nexport const CustomBarGraph: React.FC<CustomBarGraphProps> = ({\n  data,\n  domain,\n}) => {\n\n  return (\n    <div className=\"CustomBarGraph\">\n      <VictoryChart\n        width={1000}\n        height={700}\n        theme={VictoryTheme.material}\n        domain={domain}\n        containerComponent={\n          <VictoryZoomContainer/>\n        }\n      >\n        <VictoryScatter\n          style={{\n            data: { fill: 'tomato' }\n          }}\n          events={[\n            {\n              target: 'data',\n              eventHandlers: {\n                onClick: () => [{\n                  target: 'data',\n                  mutation: (props) => {\n                    alert(JSON.stringify(props, undefined, ' '))\n                    return null\n                  }\n                }],\n              }\n            }\n          ]}\n          labels={({ datum, label }) => `${label}: ${datum.size}`}\n          labelComponent={\n            <VictoryTooltip\n              dy={({datum}) => datum.size * -0.85} // offsets vertical placement by a negative ratio of the data point's size\n              constrainToVisibleArea\n            />\n          }\n\n          data={data}\n          animate={{\n            duration: 2000,\n            onLoad: { duration: 1000 }\n          }}\n        />\n\n      </VictoryChart>\n    </div>\n  );\n};","import './FullPageContainer.scss'\n\nexport const FullPageContainer: React.FC = (props) => {\n  return (\n    <div className=\"FullPageContainer\">\n      {props.children}\n    </div>\n  );\n}","import { DomainPropType } from 'victory';\nimport { CustomBarGraph } from './CustomBarGraph';\nimport { FullPageContainer } from './FullPageContainer';\nimport './Home.scss'\n\nconst dataPoints: CustomDataPoint[] = [\n  { x: 10, y: 20, size: 15, label: 'alpha' },\n  { x: 20, y: 30, size: 10, label: 'beta' },\n  { x: 30, y: 15, size: 30, label: 'delta' },\n  { x: 40, y: 80, size: 45, label: 'eplison' },\n  { x: 50, y: 7, size: 10, label: 'gamma' },\n  { x: 60, y: 40, size: 15, label: 'zeta' },\n  { x: 70, y: 45, size: 10, label: 'eta' },\n  { x: 80, y: 27, size: 9, label: 'theta' },\n  { x: 90, y: 70, size: 15, label: 'iota' },\n  { x: 100, y: 5, size: 25, label: 'kappa' },\n]\n\nconst domain: DomainPropType = {\n  x: [0, 100],\n  y: [0, 100],\n}\n\nexport const Home = () => {\n  return (\n    <FullPageContainer>\n      <main id=\"Home\">\n        <h1>HOME</h1>\n        <CustomBarGraph data={dataPoints} domain={domain}/>\n      </main>\n    </FullPageContainer>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport './TopNavbar.scss'\n\nexport const TopNavbar = () => {\n  return (\n    <nav id=\"TopNavbar\">\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/about\">About</Link>\n      </li>\n      <li>\n        <Link to=\"/press\">Press</Link>\n      </li>\n      <li>\n        <Link to=\"/contact\">Contact</Link>\n      </li>\n    </nav>\n  );\n};\n","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Home } from './components/Home';\nimport { TopNavbar } from './components/TopNavbar'\n\nfunction App() {\n    return (\n      <Router>\n        <TopNavbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}